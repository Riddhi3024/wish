name: Run PHP and Python Scripts

on:
  # Manually trigger the workflow from GitHub UI
  workflow_dispatch: 

jobs:
  run-php-python:
    runs-on: ubuntu-latest  # Runs on the latest Ubuntu version

    services:
      mysql:
        image: mysql:5.7  # MySQL image
        ports:
          - 3306:3306  # Expose MySQL port
        env:
          MYSQL_ROOT_PASSWORD: rootpassword  # Set MySQL root password
          MYSQL_DATABASE: familytree  # Set database name
        options: >-
          --health-cmd="mysqladmin ping --silent"  # Health check command for MySQL
          --health-interval=10s  # How often to run health check
          --health-timeout=5s  # Timeout for health check
          --health-retries=3  # How many retries to allow if health check fails

    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

      # List the files in the repository (optional for debugging)
      - name: List repository contents
        run: ls -l

      # Setup PHP
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      # Check PHP version to ensure PHP is correctly set up
      - name: Check PHP version
        run: php -v

      # Install MySQL client to interact with the MySQL service
      - name: Set up MySQL client
        run: sudo apt-get install -y default-mysql-client

      # Wait for MySQL to be ready (check if MySQL is running and accessible)
      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -uroot -prootpassword --silent; do
            echo "Waiting for MySQL..."
            sleep 5
          done

      # Test the MySQL connection
      - name: Test MySQL connection
        run: mysql -h 127.0.0.1 -uroot -prootpassword -e "SHOW DATABASES;"

      # Run PHP scripts
      - name: Run PHP scripts
        run: |
          php index.php
          php s.php
          php sv.php

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Install Python dependencies (if you have a requirements.txt file)
      - name: Install Python dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Run the Python image comparison script
      - name: Run Python image comparison
        run: |
          python compare.py uploads/matched_output.jpg uploads/no_match_found.jpg

      # List the contents of the uploads folder (optional for debugging)
      - name: List Uploads folder contents
        run: ls -l uploads/
